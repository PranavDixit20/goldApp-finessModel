/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package goldapp;

import java.awt.Dimension;
import java.awt.Font;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.print.PageFormat;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pranav
 */
public class List extends javax.swing.JFrame {
    
    DefaultTableModel d;
    DefaultTableCellRenderer dr;
    String srch = "";
    JFrame f; 
    File sourceimage;
    Image image;
    JFrame frame;
    JButton printBtn;
    JLabel label;

    /**
     * Creates new form List
     */
    public List() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        search = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JTable();
        delete = new javax.swing.JButton();
        orLabel = new javax.swing.JLabel();
        rr = new javax.swing.JButton();
        home = new javax.swing.JButton();
        backupListButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(1, 1, 1));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(254, 254, 254));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Client List");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(254, 254, 254));

        searchBtn.setBackground(new java.awt.Color(1, 1, 1));
        searchBtn.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        searchBtn.setForeground(new java.awt.Color(254, 254, 254));
        searchBtn.setText("Search");
        searchBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchBtnMouseClicked(evt);
            }
        });

        list.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        list.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        list.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sr.no", "Client Name", "Client Phone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        list.setCellSelectionEnabled(true);
        list.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                listAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(list);
        list.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        delete.setBackground(new java.awt.Color(1, 1, 1));
        delete.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        delete.setForeground(new java.awt.Color(254, 254, 254));
        delete.setText("Delete Record");
        delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteMouseClicked(evt);
            }
        });

        orLabel.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        orLabel.setText("OR");

        rr.setBackground(new java.awt.Color(1, 1, 1));
        rr.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        rr.setForeground(new java.awt.Color(254, 254, 254));
        rr.setText("Refresh Records");
        rr.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rrMouseClicked(evt);
            }
        });

        home.setBackground(new java.awt.Color(1, 1, 1));
        home.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        home.setForeground(new java.awt.Color(254, 254, 254));
        home.setText("Home");
        home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeMouseClicked(evt);
            }
        });

        backupListButton.setBackground(new java.awt.Color(0, 0, 0));
        backupListButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        backupListButton.setForeground(new java.awt.Color(255, 255, 255));
        backupListButton.setText("Backup");
        backupListButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backupListButtonMouseClicked(evt);
            }
        });
        backupListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backupListButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(orLabel)
                .addGap(9, 9, 9)
                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(rr, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(backupListButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(home)
                .addGap(28, 28, 28))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1143, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rr, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(orLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(home, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(backupListButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void AllList(){
        Connection c = null;
             try {
                Class.forName("org.sqlite.JDBC");
                c = DriverManager.getConnection("jdbc:sqlite:goldAppDB.db");

                System.out.println("Opened database successfully");
                PreparedStatement s = c.prepareStatement("select * from report");


                ResultSet rs = s.executeQuery(  );

                 while(rs.next()){

                    d.addRow(new Object[]{rs.getInt("id"),rs.getString("cname"),rs.getString("cphone")});
                }


                rs.close();
                s.close();
                c.close();
             } catch ( Exception e ) {
                System.err.println( e.getClass().getName() + ": " + e.getMessage() );
                System.exit(0);
             }
             System.out.println("Operation done successfully");
    }
    
    private void listAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_listAncestorAdded
        // TODO add your handling code here:
            d = (DefaultTableModel)list.getModel();
            dr = new DefaultTableCellRenderer();
            dr.setHorizontalAlignment(SwingConstants.CENTER);
            list.setDefaultRenderer(String.class, dr);
            list.setDefaultRenderer(Integer.class, dr);
            list.setRowHeight(30);
            list.getTableHeader().setFont(new Font("SansSerif", Font.ITALIC, 15));
             
            list = new JTable();
            list.setPreferredScrollableViewportSize(new Dimension(450,63));
            list.setFillsViewportHeight(true);
             
            JScrollPane js = new JScrollPane(list);
            js.setVisible(true);
            add(js);
            
            AllList();
             
        
        
    }//GEN-LAST:event_listAncestorAdded

    private void searchBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchBtnMouseClicked
        // TODO add your handling code here:
        
        d.setRowCount(0);
        dr = new DefaultTableCellRenderer();
        dr.setHorizontalAlignment(SwingConstants.CENTER);
        list.setDefaultRenderer(String.class, dr);
        list.setDefaultRenderer(Integer.class, dr);
            
             
        
        if(search.getText().isEmpty()){
            
            f=new JFrame();  
            JOptionPane.showMessageDialog(f,"Please Enter Sr.NO");
            
            AllList();
            
        } else {
            
            srch = search.getText();
            Connection c = null;
             try {
                Class.forName("org.sqlite.JDBC");
                c = DriverManager.getConnection("jdbc:sqlite:goldAppDB.db");

                System.out.println("Opened database successfully");
                PreparedStatement s = c.prepareStatement("select * from report where id = ?");
                s.setInt(1, Integer.parseInt(srch));

                ResultSet rs = s.executeQuery();

                while(rs.next()){
                     
                    d.addRow(new Object[]{rs.getInt("id"),rs.getString("cname"),rs.getString("cphone")});
                    System.out.println(rs.getInt("id") + rs.getString("cname") + rs.getString("cphone"));
                     
                }


                rs.close();
                s.close();
                c.close();
             } catch ( Exception e ) {
                System.err.println( e.getClass().getName() + ": " + e.getMessage() );
                System.exit(0);
             }
             System.out.println("Search Operation done successfully");
            
        }
        
        
        
    }//GEN-LAST:event_searchBtnMouseClicked

    private void deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseClicked
        // TODO add your handling code here:
        
        if(search.getText().isEmpty()){
            
            f=new JFrame();  
            JOptionPane.showMessageDialog(f,"Please Enter Sr.NO");
            AllList();
            
        } else {
            
            srch = search.getText();
            Connection c = null;
             try {
                Class.forName("org.sqlite.JDBC");
                c = DriverManager.getConnection("jdbc:sqlite:goldAppDB.db");

                System.out.println("Opened database successfully");
                PreparedStatement s = c.prepareStatement("delete from report where id = ?");
                s.setInt(1, Integer.parseInt(srch));
                s.executeUpdate();

                
                s.close();
                c.close();
             } catch ( Exception e ) {
                System.err.println( e.getClass().getName() + ": " + e.getMessage() );
                System.exit(0);
             }
             System.out.println("delete Operation done successfully");
             
              f=new JFrame();  
              JOptionPane.showMessageDialog(f,"Record Deleted Successfully");
              if (JOptionPane.OK_OPTION == 0) {
                // Action i want done
                d.setRowCount(0);
                AllList();
                
              }
            
        }
        
    }//GEN-LAST:event_deleteMouseClicked

    private void rrMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rrMouseClicked
        // TODO add your handling code here:
        d.setRowCount(0);
        AllList();
                
              
    }//GEN-LAST:event_rrMouseClicked

    private void homeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMouseClicked
        // TODO add your handling code here:
        goldApp g = new goldApp();
        g.setVisible(true);
        dispose();
    }//GEN-LAST:event_homeMouseClicked

    private void listMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listMouseClicked
       
            // TODO add your handling code here:
            //get data from table row
            JTable source = (JTable)evt.getSource();
            int row = source.rowAtPoint( evt.getPoint() );
            int column = source.columnAtPoint( evt.getPoint() );
            int xyz = source.getSelectedRow();
            String s=source.getModel().getValueAt(row, column)+"";
            System.out.println("selected url"+s);
            
            Connection c = null;
             try {
                Class.forName("org.sqlite.JDBC");
                c = DriverManager.getConnection("jdbc:sqlite:goldAppDB.db");

                System.out.println("Opened database successfully");
                PreparedStatement st = c.prepareStatement("select * from report where id = ?");
                st.setInt(1, Integer.parseInt(s));
                ResultSet rs = st.executeQuery();

                while(rs.next()){
                    System.out.println(rs.getString("bill_url"));
                    if(rs.getString("bill_url").isEmpty()){
                        JOptionPane.showMessageDialog(null,"Bill Print Not Avaliable" ,null,JOptionPane.DEFAULT_OPTION);
                    }
                    else{
                        Receipt r = new Receipt();
                        r.setVisible(true);
                        r.duplicatBill(s,rs.getString("bill_url"));
                        dispose();
                    }
                    
                     
                }


                rs.close();
                st.close();
                c.close();
             } catch ( Exception e ) {
                System.err.println( e.getClass().getName() + ": " + e.getMessage() );
                JOptionPane.showMessageDialog(null,"Bill Print Not Avaliable" ,null,JOptionPane.DEFAULT_OPTION);
             }
             System.out.println("Search Operation done successfully");
        
    }//GEN-LAST:event_listMouseClicked

    private void backupListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backupListButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_backupListButtonActionPerformed

    private void backupListButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backupListButtonMouseClicked
         new Backup().backupRecord();
    }//GEN-LAST:event_backupListButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(List.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new List().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backupListButton;
    private javax.swing.JButton delete;
    private javax.swing.JButton home;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable list;
    private javax.swing.JLabel orLabel;
    private javax.swing.JButton rr;
    private javax.swing.JTextField search;
    private javax.swing.JButton searchBtn;
    // End of variables declaration//GEN-END:variables
}
